{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-india-ETL"
		},
		"ls_adls_csv_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_csv_sink'"
		},
		"ls_adls_csv_source_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_csv_source'"
		},
		"ls_adls_json_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_json_sink'"
		},
		"ls_adls_transformedCSV_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_transformedCSV_sink'"
		},
		"ls_adls_csv_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://1ststorageaccount01.dfs.core.windows.net/"
		},
		"ls_adls_csv_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://1ststorageaccount01.dfs.core.windows.net/"
		},
		"ls_adls_json_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://2ndstorageaccount02.dfs.core.windows.net/"
		},
		"ls_adls_transformedCSV_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://1ststorageaccount01.dfs.core.windows.net/"
		},
		"ls_http_csv_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://files.cdn.thinkific.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "stored the transformed data in 1st storage accocunt, in this pipeline will get that file and convert into json file and store it in 2nd storage account.",
				"activities": [
					{
						"name": "file_validation",
						"description": "will check for the availability of transformed orders csv file in 1st storageaccount's adls",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls_transformedCSV_sink",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:01:00",
							"sleep": 10
						}
					},
					{
						"name": "column_count_check",
						"description": "checks the column count",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "file_validation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls_transformedCSV_sink",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "final_activity",
						"description": "based on column count will store the data in 2nd storage account, if it fails will trigger an email alert",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "column_count_check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('column_count_check').output.columnCount,2)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pipeline_failure",
									"description": "stop pipeline execution",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "pipeline failed",
										"errorCode": "400"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "copyCSVtoJSON",
									"description": "copies the transformed data and converts into a json",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:20:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "transformed-data",
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"path": "$['Column1']"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 2
													},
													"sink": {
														"path": "$['Column2']"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adls_transformedCSV_sink",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_final_json_sink",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-08T11:27:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_transformedCSV_sink')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_final_json_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "here will execute all individual pipelines",
				"activities": [
					{
						"name": "1st",
						"description": "will execute pl_raw_data_extraction",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_raw_data_extraction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2nd",
						"description": "will execute pl_transformation pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "1st",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_transformation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3rd",
						"description": "will execute pl_load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "2nd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-08T11:30:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_raw_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_transformation')]",
				"[concat(variables('factoryId'), '/pipelines/pl_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_raw_data_extraction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "In this pipeline performing a copy activity, which copies exact data from the source csv file into a adls gen2.",
				"activities": [
					{
						"name": "copying_raw_csv",
						"description": "copies raw data from http url tp adls gen2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 1,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "order_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "order_customer_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_customer_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "order_status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_status",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_http_csv_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_rawCSV_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-08T10:35:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_http_csv_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_rawCSV_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_transformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "in this pipeline will run the already created data flow(df_ingestion) which will transform raw data from adls gen2.",
				"activities": [
					{
						"name": "df_Ingestion",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Ingestion",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dfAdls01Source": {},
									"transformedFile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-08T11:24:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_Ingestion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_final_json_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_json_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "order_type.json",
						"folderPath": "output",
						"fileSystem": "root"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_json_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_rawCSV_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_csv_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "raw_file.csv",
						"folderPath": "raw-data",
						"fileSystem": "root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "order_customer_id",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_csv_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_transformedCSV_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_transformedCSV_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "transformed-data",
						"fileSystem": "root"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": null
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_transformedCSV_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_http_csv_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "dataset for the http url where orders.csv file is there.",
				"linkedServiceName": {
					"referenceName": "ls_http_csv_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "file_uploads/349536/attachments/c28/5fb/25b/orders.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "order_customer_id",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_csv_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_csv_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this linked service is created to connect with 1ststorageaccount01",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_csv_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_csv_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_csv_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is the same csv file which i stored in 1st storage account's adls gen2, have another ls named ls_adls_csv_source.",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_csv_source_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_csv_source_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_json_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "used to connect with 2nd adls gen2",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_json_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_json_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_transformedCSV_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_transformedCSV_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_transformedCSV_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_csv_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is the linked service created to connect to the http url from this i am downloading my orders.csv file.",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_csv_source_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_pipeline_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "this is used to execute master pipeline at a schedule time intervals",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_master_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 15,
						"startTime": "2024-08-08T17:22:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_master_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Ingestion')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_adls_rawCSV_sink",
								"type": "DatasetReference"
							},
							"name": "dfAdls01Source",
							"description": "stored the raw csv file which i got from http in 1ststorageaccount's adls"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adls_transformedCSV_sink",
								"type": "DatasetReference"
							},
							"name": "transformedFile",
							"description": "transformed file "
						}
					],
					"transformations": [
						{
							"name": "columnTransformations",
							"description": "removing order_date, renaming order_customer_id to customer_id"
						},
						{
							"name": "groupByTransformation",
							"description": "will perform group by on order status column"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as string,",
						"          order_date as string,",
						"          order_customer_id as string,",
						"          order_status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> dfAdls01Source",
						"dfAdls01Source select(mapColumn(",
						"          order_id,",
						"          customer_id = order_customer_id,",
						"          order_status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> columnTransformations",
						"columnTransformations aggregate(groupBy(order_status),",
						"     No_of_orders = count(order_status)) ~> groupByTransformation",
						"groupByTransformation sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> transformedFile"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_adls_rawCSV_sink')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_transformedCSV_sink')]"
			]
		}
	]
}