{
	"name": "df_Ingestion",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_rawCSV_sink",
						"type": "DatasetReference"
					},
					"name": "dfAdls01Source",
					"description": "stored the raw csv file which i got from http in 1ststorageaccount's adls"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_transformedCSV_sink",
						"type": "DatasetReference"
					},
					"name": "transformedFile",
					"description": "transformed file "
				}
			],
			"transformations": [
				{
					"name": "columnTransformations",
					"description": "removing order_date, renaming order_customer_id to customer_id"
				},
				{
					"name": "groupByTransformation",
					"description": "will perform group by on order status column"
				}
			],
			"scriptLines": [
				"source(output(",
				"          order_id as string,",
				"          order_date as string,",
				"          order_customer_id as string,",
				"          order_status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dfAdls01Source",
				"dfAdls01Source select(mapColumn(",
				"          order_id,",
				"          customer_id = order_customer_id,",
				"          order_status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> columnTransformations",
				"columnTransformations aggregate(groupBy(order_status),",
				"     No_of_orders = count(order_status)) ~> groupByTransformation",
				"groupByTransformation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> transformedFile"
			]
		}
	}
}